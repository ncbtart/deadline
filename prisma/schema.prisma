// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

enum Typologie {
    INFRASTRUCTURE
    RH
    FINANCE
    JURIDIQUE
    COMMUNICATION
    INFORMATIQUE
    AUTRE
}

enum StatusEcheance {
    A_FAIRE
    EN_COURS
    TERMINE
}

enum Note {
    NEMO
    MAIL
}

model Echeance {
    id          String          @id @default(cuid())
    objet       String
    responsable User            @relation(fields: [userId], references: [id])
    reference   String          @unique
    date        DateTime
    typologie   Typologie
    echeance    DateTime
    status      StatusEcheance? @default(A_FAIRE)
    note        Note

    userId            String
    echeancePersonnel EcheancePersonnel[]

    @@index([userId])
}

model EcheancePersonnel {
    echeance    Echeance @relation(fields: [echeanceId], references: [id])
    personnel   User     @relation(fields: [personnelId], references: [id])
    echeanceId  String
    personnelId String

    @@id([echeanceId, personnelId])
    @@index([echeanceId])
    @@index([personnelId])
}

model User {
    id                String              @id @default(cuid())
    name              String?
    password          String?
    email             String?             @unique
    emailVerified     DateTime?
    image             String?
    accounts          Account[]
    sessions          Session[]
    echeances         Echeance[]
    echeancePersonnel EcheancePersonnel[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
